{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultprops","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setday","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","toggleReminder","taskToToggle","updTask","method","headers","body","JSON","stringify","addTask","deleteTask","filter","showAddTask","setShowAddTask","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.39706934.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultprops = {\n  color: \"steelblue\"\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func\n};\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({title, onAdd, showAdd}) => {\n  const onClick = () => {\n    console.log(\"Click\");\n  };\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'close' : 'Add'} onClick={onAdd} />\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\"\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\n// const headingStyle = {\n//   color: \"red\",\n//   backgroundColor: \"black\"\n// };\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} onToggle={onToggle} />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({onAdd}) => {\n  const [text, setText] = useState(\"\");\n  const [day, setday] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add task!\");\n      return\n    }\n\n    onAdd({ text, day, reminder })\n    \n    setText('')\n    setday('')\n    setReminder(false)\n  };\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add day & Time\"\n          value={day}\n          onChange={(e) => setday(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import \"./styles.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\nuseEffect (() => {\n  const getTasks = async () => {\n    const tasksFromServer = await fetchTasks()\n    setTasks(tasksFromServer)\n  }\n  getTasks()\n}, [])\n\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5001/tasks')\n  const data = await res.json()\n  return data\n}\n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5001/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  };\n\n  const addTask = async (task) => {\n\n    const res = await fetch('http://localhost:5001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    setTasks([...tasks, data]);\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  };\n  const [showAddTask, setShowAddTask] = useState(false);\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"Nothing to show\"\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}